C51 COMPILER V9.01   SHIYAN5                                                               11/06/2019 01:03:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SHIYAN5
OBJECT MODULE PLACED IN shiyan5.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE shiyan5.c BROWSE DEFINE(DEBUG_ENABLE_SEMIHOST) DEBUG OBJECTEXTEND

line level    source

   1             
   2          #include <AT89x51.H>            //器件配置文件
   3          #include <intrins.h>
   4          #define  RX  P2_0
   5          #define  TX  P2_1
   6          sbit DU  = P2^6;   //数码管段选
   7          sbit WE  = P2^7;   //数码管位选
   8          
   9          sbit leftBack=P1^2;
  10          sbit leftFor=P1^3;
  11          sbit enL=P1^4;
  12          sbit enR=P1^5;
  13          sbit rightFor=P1^6;
  14          sbit rightBack=P1^7;
  15          
  16          unsigned int  time=0;
  17          unsigned int  timer=0;
  18          unsigned char posit=0;
  19          unsigned long S=0;
  20          bit      flag =0;
  21          unsigned char const discode[] ={ 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F,0x6F,0x40,0x00/*-*/}
             -;
  22          unsigned char const positon[4]={ 0xfe,0xfd,0xfb,0xf7};
  23          unsigned char disbuff[4]           ={ 0,0,0,0,};
  24          void go()
  25          {
  26   1              enL=1;
  27   1              enR=1;
  28   1              leftBack=0;
  29   1              rightBack=0;
  30   1              leftFor=1;
  31   1              rightFor=1;
  32   1      }
  33          /********************************************************/
  34              void Display(void)                           //扫描数码管
  35                  {
  36   1              DU = 0; 
  37   1               if(posit==0)
  38   1               {P0=(discode[disbuff[posit]]);}
  39   1               else
  40   1               {P0=discode[disbuff[posit]];}
  41   1               DU = 1;
  42   1               DU = 0;
  43   1      
  44   1               WE = 0;
  45   1                P0=positon[posit];
  46   1                WE=1;
  47   1                WE=0;
  48   1                if(++posit>=4)
  49   1                posit=0;
  50   1              }
  51          /********************************************************/
  52              void Conut(void)
  53                  {
  54   1               time=TH0*256+TL0;
C51 COMPILER V9.01   SHIYAN5                                                               11/06/2019 01:03:29 PAGE 2   

  55   1               TH0=0;
  56   1               TL0=0;
  57   1              
  58   1               S=(float)(time*1.085)*0.17;     //算出来是MM
  59   1               
  60   1               if((S>=7000)||flag==1) //超出测量范围显示“-”
  61   1               {       
  62   2                flag=0;
  63   2                disbuff[0]=10;           //“-”
  64   2                disbuff[1]=10;           //“-”
  65   2                disbuff[2]=10;           //“-”
  66   2                disbuff[3]=10;           //“-”
  67   2               }
  68   1               if(S<450)
  69   1               {        
  70   2                        enL=0;
  71   2                        enR=0;
  72   2                        disbuff[0]=S/1000;
  73   2                        disbuff[1]=S%1000/100;
  74   2                        disbuff[2]=S%100/10;
  75   2                        disbuff[3]=S%10;
  76   2               }       
  77   1               else
  78   1                      go();
  79   1              }
  80          /********************************************************/
  81               void zd0() interrupt 1              //T0中断用来计数器溢出,超过测距范围
  82            {
  83   1          flag=1;                                                      //中断溢出标志
  84   1        }
  85          /********************************************************/
  86             void  zd3()  interrupt 3              //T1中断用来扫描数码管和计800MS启动模块
  87            {
  88   1               TH1=0xf8;
  89   1               TL1=0x30;
  90   1               Display();
  91   1               timer++;
  92   1               if(timer>=400)
  93   1               {
  94   2                timer=0;
  95   2                TX=1;                                 //800MS  启动一次模块
  96   2                _nop_(); 
  97   2                _nop_(); 
  98   2                _nop_(); 
  99   2                _nop_(); 
 100   2                _nop_(); 
 101   2                _nop_(); 
 102   2                _nop_(); 
 103   2                _nop_(); 
 104   2                _nop_(); 
 105   2                _nop_(); 
 106   2                _nop_(); 
 107   2                _nop_(); 
 108   2                _nop_(); 
 109   2                _nop_(); 
 110   2                _nop_(); 
 111   2                _nop_(); 
 112   2                _nop_();
 113   2                _nop_(); 
 114   2                _nop_(); 
 115   2                _nop_(); 
 116   2                _nop_();
C51 COMPILER V9.01   SHIYAN5                                                               11/06/2019 01:03:29 PAGE 3   

 117   2                TX=0;
 118   2               } 
 119   1        }
 120          /*********************************************************/
 121          
 122                  void  main(  void  )
 123          
 124            {  
 125   1          TMOD=0x11;             //设T0,T1为方式1定时模式，GATE=1；
 126   1              TH0=0;
 127   1              TL0=0;          
 128   1              TH1=0xf8;                  //2MS定时
 129   1              TL1=0x30;
 130   1              ET0=1;             //允许T0中断
 131   1              ET1=1;                     //允许T1中断
 132   1              TR1=1;                     //开启定时器1
 133   1              EA=1;                      //开启总中断
 134   1      
 135   1              while(1)
 136   1              {
 137   2               while(!RX);            //当RX（ECHO信号回响）为零时等待
 138   2               TR0=1;                     //开启计数
 139   2               while(RX);                     //当RX为1计数并等待
 140   2               TR0=0;                         //关闭计数
 141   2           Conut();                   //计算
 142   2              }
 143   1      
 144   1        }
 145                          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    405    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
