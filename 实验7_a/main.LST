C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************
   2          * 【编写时间】： 2018年04月20日
   3          * 【作    者】： 清翔电子:03
   4          * 【版    本】： 1.0
   5          * 【网    站】： http://www.qxmcu.com/ 
   6          * 【淘宝店铺】： http://qxmcu.taobao.com/ (直销店)
   7          * 【实验平台】： QX-MCS51 单片机开发板 & QX-A51智能小车
   8          * 【外部晶振】： 11.0592mhz     
   9          * 【主控芯片】： STC89C52
  10          * 【编译环境】： Keil μVisio4
  11          * 【程序功能】：QX-A51智能小车WIFI控制                                                                      
  12          * 【使用说明】：请看资料内“QX-51智能小车wifi控制使用指南”文档
  13          * 【注意事项】：请看资料内“QX-51智能小车wifi控制使用指南”文档
  14          **********************************************************************************/
  15          #include <reg52.h> //51头文件
  16          #include <intrins.h>   //包含nop等系统函数
  17          #include <QXA51.h>//QX-A51智能小车配置文件
  18          unsigned char pwm_left_val = 30;//左电机占空比值 取值范围0-170，0最快
  19          unsigned char pwm_right_val = 30;//右电机占空比值取值范围0-170 ,0最快
  20          unsigned char pwm_t;//周期
  21          unsigned char control=0X01;//车运动控制全局变量，默认开机为停车状态
  22          
  23          /*****************ESPWIFI部分********************/
  24          unsigned char ReceivedCount = 0;//串口数据接收计数
  25          unsigned char ReadData;         //读串口SBUF
  26          bit ESP_EN = 0;//接收ESPwifi模块数据允许位
  27          /***********************************************/
  28          
  29          /******************************
  30          超声波定义
  31          *******************************/
  32          sbit RX = P2^0;//ECHO超声波模块回响端
  33          sbit TX = P2^1;//TRIG超声波模块触发端
  34          unsigned int  time = 0;//传输时间
  35          unsigned long S = 0;//距离
  36          bit      flag = 0;//超出测量范围标志位
  37          
  38          void Delay10us(unsigned char i)         //10us延时函数 启动超声波模块时使用
  39          { 
  40   1         unsigned char j; 
  41   1              do{ 
  42   2                      j = 10; 
  43   2                      do{ 
  44   3                              _nop_(); 
  45   3                      }while(--j); 
  46   2              }while(--i); 
  47   1      }
  48          
  49          void delay(unsigned int z)//毫秒级延时
  50          {
  51   1              unsigned int x,y;
  52   1              for(x = z; x > 0; x--)
  53   1                      for(y = 114; y > 0 ; y--);
  54   1      }
  55                  
C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 2   

  56          /*小车前进*/
  57          void forward()
  58          {
  59   1              pwm_left_val = 120;//左电机占空比值 取值范围0-170，0最快
  60   1              pwm_right_val = 140     ;
  61   1              left_motor_go; //左电机前进
  62   1              right_motor_go; //右电机前进
  63   1      }
  64          /*小车左转*/
  65          void left_run()
  66          {
  67   1              pwm_left_val = 140;//左电机占空比值 取值范围0-170，0最快
  68   1              pwm_right_val = 140     ;
  69   1              left_motor_stops; //左电机停止
  70   1              right_motor_go; //右电机前进    
  71   1      }
  72          /*小车右转*/
  73          void right_run()
  74          {
  75   1              pwm_left_val = 140;//左电机占空比值 取值范围0-170，0最快
  76   1              pwm_right_val = 140     ;
  77   1              right_motor_stops;//右电机停止
  78   1              left_motor_go;    //左电机前进
  79   1      }
  80          
  81          /*PWM控制使能 小车高速右转*/
  82          void right_rapidly()
  83          {
  84   1              pwm_left_val = 10;//左电机占空比值 取值范围0-170，0最快
  85   1              pwm_right_val = 150     ;
  86   1              right_motor_go;
  87   1              left_motor_go;  
  88   1      }
  89          /*小车高速左转*/
  90          void left_rapidly()
  91          {
  92   1      //      right_motor_go;
  93   1      //      left_motor_back;
  94   1                      pwm_left_val = 150;//左电机占空比值 取值范围0-170，0最快
  95   1                      pwm_right_val = 10      ;
  96   1                      right_motor_go;
  97   1                      left_motor_go;
  98   1      }
  99          
 100          
 101          /*PWM控制使能 小车后退*/
 102          void backward()
 103          {
 104   1              left_motor_back; //左电机后退
 105   1              right_motor_back; //右电机后退  
 106   1      }
 107          void stop()
 108          {
 109   1                      left_motor_stops; //左电机后退
 110   1                      right_motor_stops; //右电机后退 
 111   1      }
 112          
 113          /**************************************************
 114          超声波程序
 115          ***************************************************/
 116          void  StartModule()                      //启动超声波模块
 117          {
C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 3   

 118   1                TX=1;                                      //启动一次模块
 119   1            Delay10us(2);
 120   1                TX=0;
 121   1      }
 122          
 123          /*计算超声波所测距离*/
 124          void Conut(void)
 125          {
 126   1              time=TH0*256+TL0;
 127   1              TH0=0;
 128   1              TL0=0;
 129   1              
 130   1              S=(float)(time*1.085)*0.17;     //算出来是MM
 131   1              if((S>=7000)||flag==1) //超出测量范围
 132   1              {        
 133   2                      flag=0;
 134   2              }
 135   1      }
 136          
 137          /*超声波避障*/
 138          void    Avoid()
 139          {
 140   1              if(S < 400)//设置避障距离 ，单位毫米    刹车距离
 141   1              {
 142   2                      stop();//停车
 143   2                      backward();//后退
 144   2                      delay(100);//后退时间越长、距离越远。后退是为了留出车辆转向的空间
 145   2                      do{
 146   3                              left_rapidly();//高速左转
 147   3                              delay(90);//时间越长 转向角度越大，与实际行驶环境有关
 148   3                              stop();//停车
 149   3                              delay(100);//时间越长 停止时间越久长
 150   3      
 151   3                              StartModule();  //启动模块测距，再次判断是否
 152   3                              while(!RX);             //当RX（ECHO信号回响）为零时等待
 153   3                              TR0=1;                      //开启计数
 154   3                              while(RX);                      //当RX为1计数并等待
 155   3                              TR0=0;                          //关闭计数
 156   3                              Conut();                        //计算距离
 157   3                              }while(S < 280);//判断前面障碍物距离
 158   2              }
 159   1              else
 160   1              {
 161   2                      forward();//前进
 162   2              }       
 163   1      }
 164          
 165          
 166          //黑线寻迹
 167          void BlackLine()
 168          {
 169   1                      //为0 没有识别到黑线 为1识别到黑线
 170   1              if(left_led1 == 1 && right_led1 == 1)//左右寻迹探头识别到黑线
 171   1              {
 172   2                      forward();//前进
 173   2              }
 174   1              else
 175   1              {
 176   2                      if(left_led1 == 1 && right_led1 == 0)//小车右边出线，左转修正
 177   2                      {
 178   3                              left_run();//左转
 179   3                      }
C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 4   

 180   2                      if(left_led1 == 0 && right_led1 == 1)//小车左边出线，右转修正
 181   2                      {
 182   3                              right_run();//右转
 183   3                      }
 184   2                      if(left_led1 == 0 && right_led1 == 0)//左右寻迹探头都没识别到黑线
 185   2                      {
 186   3                              backward();//后退
 187   3                      }               
 188   2              }       
 189   1      }
 190          
 191          //红外避障
 192          void IRAvoid()
 193          {
 194   1                                      //为0 识别障碍物 为1没有识别到障碍物
 195   1              if(left_led2 == 1 && right_led2 == 1)//左右都没识别到障碍物
 196   1              {
 197   2                      pwm_left_val = 140;//左电机占空比值 取值范围0-170，0最快
 198   2                      pwm_right_val = 150;//右电机占空比值取值范围0-170 ,0最快
 199   2                      forward();//前进
 200   2              }
 201   1              if(left_led2 == 1 && right_led2 == 0)//小车右侧识别到障碍物，左转躲避
 202   1              {
 203   2                      pwm_left_val = 180;//左电机占空比值 取值范围0-170，0最快
 204   2                      pwm_right_val = 110;//右电机占空比值取值范围0-170 ,0最快
 205   2                      left_run();//左转
 206   2                      delay(40);//左转40毫秒（实现左小弯转）
 207   2              }
 208   1              if(left_led2 == 0 && right_led2 == 1)//小车左侧识别到障碍物，右转躲避
 209   1              {
 210   2                      pwm_left_val = 100;//左电机占空比值 取值范围0-170，0最快
 211   2                      pwm_right_val = 180;//右电机占空比值取值范围0-170 ,0最快
 212   2                      right_run();//右转
 213   2                      delay(40);//右转40毫秒（实现右小弯转）
 214   2              }
 215   1              if(left_led2 == 0 && right_led2 == 0) //小车左右两侧都识别到障碍物，后退掉头
 216   1              {
 217   2                      pwm_left_val = 150;//左电机占空比值 取值范围0-170，0最快
 218   2                      pwm_right_val = 160;//右电机占空比值取值范围0-170 ,0最快        
 219   2                      backward();//后退
 220   2                      delay(100);//后退的时间影响后退的距离。后退时间越长、后退距离越远。
 221   2                      pwm_left_val = 140;//左电机占空比值 取值范围0-170，0最快
 222   2                      pwm_right_val = 150;//右电机占空比值取值范围0-170 ,0最快
 223   2                      right_rapidly();//高速右转
 224   2                      delay(180);//延时时间越长，转向角度越大。       
 225   2              }               
 226   1      }
 227          
 228          //超声波避障
 229          void Ultrasonic()
 230          {
 231   1              StartModule();  //启动模块测距
 232   1              while(!RX);             //当RX（ECHO信号回响）为零时等待
 233   1              TR0=1;                      //开启计数
 234   1              while(RX);                      //当RX为1计数并等待
 235   1              TR0=0;                          //关闭计数
 236   1              Conut();                        //计算距离
 237   1              Avoid();                        //避障
 238   1              delay(65);                      //测试周期不低于60MS    
 239   1      }
 240          
 241          //红外物体跟随
C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 5   

 242          void IRTracking()
 243          {
 244   1                      //为0 识别障碍物 为1没有识别到障碍物
 245   1              if(left_led2 == 0 && right_led2 == 0)//左右识别到障碍物，前进跟随
 246   1              {
 247   2                      forward();//前进
 248   2              }
 249   1              if(left_led2 == 1 && right_led2 == 0)//小车右侧识别到障碍物，右转跟随
 250   1              {
 251   2                      right_run();//右转
 252   2              }
 253   1              if(left_led2 == 0 && right_led2 == 1)//小车左侧识别到障碍物，左转跟随
 254   1              {
 255   2                      left_run();//左转
 256   2              }
 257   1      }
 258          
 259          //初始化
 260          void Init(void)
 261          {
 262   1              EA = 1;     //开总中断
 263   1      
 264   1              SCON |= 0x50;   // SCON: 模式1, 8-bit UART, 使能接收
 265   1              T2CON |= 0x34; //设置定时器2为串口波特率发生器并启动定时器2
 266   1              TL2 = RCAP2L = (65536-(FOSC/32/BAUD)); //设置波特率
 267   1              TH2 = RCAP2H = (65536-(FOSC/32/BAUD)) >> 8;
 268   1              ES= 1;                  //打开串口中断
 269   1      
 270   1              TMOD |= 0x01;//定时器0工作模块1,16位定时模式。T0用测ECH0脉冲长度
 271   1              TH0 = 0;
 272   1              TL0 = 0;//T0,16位定时计数用于记录ECHO高电平时间
 273   1              ET0 = 1;//允许定时器0中断
 274   1      
 275   1              TMOD |= 0x20;   //定时器1，8位自动重装模块
 276   1              TH1 = 220;     
 277   1          TL1 = 220;     //11.0592M晶振下占空比最大比值是256,输出100HZ
 278   1              TR1 = 1;//启动定时器1
 279   1              ET1 = 1;//允许定时器1中断
 280   1      }
 281          
 282          
 283          void main()
 284          {
 285   1              unsigned char *CIPMUX;   //设置多连接
 286   1              unsigned char *CIPSERVER;//设置端口
 287   1              unsigned char *CIPSTO;//设置超时链接
 288   1              delay(2000);//延时2秒
 289   1              Init();//定时器、串口初始化
 290   1      
 291   1              do
 292   1              {
 293   2                      CIPMUX = "AT+CIPMUX=1\r\n";//设置多连接 
 294   2                      while(*CIPMUX != '\0')
 295   2                      {
 296   3                              SBUF=*(CIPMUX++);               
 297   3                              while(TI==0);           
 298   3                              TI=0;                                           
 299   3                      }
 300   2                      delay(1000);//延时1000ms
 301   2              }while(ReadData != '\n');
 302   1              ReadData = '0';
 303   1      
C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 6   

 304   1              do
 305   1              {
 306   2                      CIPSERVER = "AT+CIPSERVER=1,8080\r\n";//设置端口        
 307   2                      while(*CIPSERVER != '\0')
 308   2                      {
 309   3                              SBUF=*(CIPSERVER++);            
 310   3                              while(TI==0);           
 311   3                              TI=0;                                           
 312   3                      }
 313   2                      delay(1000);//延时1000ms
 314   2              }while(ReadData != '\n');
 315   1              ReadData = '0';
 316   1      
 317   1              do
 318   1              {
 319   2                      CIPSTO = "AT+CIPSTO=0\r\n";//串口发送指令AT+CIPSTO=0，设置服务超时时间，0即永远不超时   
 320   2                      while(*CIPSTO != '\0')
 321   2                      {
 322   3                              SBUF=*(CIPSTO++);               
 323   3                              while(TI==0);           
 324   3                              TI=0;                                           
 325   3                      }
 326   2                      delay(1000);//延时1000ms
 327   2              }while(ReadData != '\n');
 328   1              ReadData = '0';
 329   1      
 330   1              beep = 0;
 331   1              delay(1000);
 332   1              beep = 1;
 333   1      
 334   1              while(1)
 335   1              {
 336   2                      if(control > 0x17)//如果成立，则表示接收的命令不在运行命令内
 337   2                 {
 338   3                      stop(); //  停车 
 339   3                 }
 340   2                      switch(control)
 341   2                      {
 342   3                              case 0x02:      forward();      break;  //前进
 343   3                              case 0x03:      backward();     break;  //后退
 344   3                              case 0x04:      left_run();     break;  //左转
 345   3                              case 0x05:      right_run();    break;//右转
 346   3                              case 0x01:      stop();         break;//停车
 347   3                              case 0x06:      left_rapidly(); break;//左旋转
 348   3                              case 0x07:      right_rapidly();        break;//右旋转
 349   3                              case 0x08:      beep = 0;       break;//鸣笛
 350   3                              case 0x09:      beep = 1;       break;//停止鸣笛
 351   3      
 352   3                              case 0X11:      Ultrasonic();           break;//超声波测距
 353   3                              case 0X12:      BlackLine();            break;//黑线寻迹
 354   3                              case 0X13:      IRAvoid();                      break;//红外避障
 355   3      
 356   3                              case 0X15:      IRTracking();           break;//红外-跟随物体
 357   3                      }
 358   2              }
 359   1      }
 360          
 361          //定时器0中断
 362          void timer0() interrupt 1
 363          {
 364   1              flag=1;                                                  //中断溢出标志                                  
 365   1      }
C51 COMPILER V9.01   MAIN                                                                  11/30/2019 22:37:57 PAGE 7   

 366          
 367          void timer1() interrupt 3                //T1中断用来计数器溢出
 368          {
 369   1          pwm_t++;//周期计时加
 370   1              if(pwm_t == 255)
 371   1                      pwm_t = EN1 = EN2 = 0;
 372   1              if(pwm_left_val == pwm_t)//左电机占空比 
 373   1                      EN1 = 1;                
 374   1              if(pwm_right_val == pwm_t)//右电机占空比
 375   1                      EN2 = 1;                         
 376   1      }
 377          
 378           /******************************************************************/
 379          /* 串口中断程序*/
 380          /******************************************************************/
 381          void UART_SER () interrupt 4
 382          {
 383   1              if(RI)          //判断是接收中断产生
 384   1              {
 385   2                      RI = 0;         //标志位清零
 386   2                      ReadData = SBUF; //读入缓冲区的值
 387   2              }
 388   1              if(ReadData == '+') //读到包头
 389   1              {
 390   2                      ESP_EN = 1;
 391   2              }
 392   1              if(ESP_EN == 1)
 393   1              {
 394   2                      ReceivedCount++;
 395   2              }
 396   1              if(ReceivedCount == 10)
 397   1              {
 398   2                      control = SBUF; //读入缓冲区的值
 399   2                      ReceivedCount = 0;
 400   2                      ESP_EN = 0;     
 401   2                      if((control >= 51) && (control <= 150))//左电机调速0~100个档位 手机端软件进行调节
 402   2                              pwm_left_val = 170-((control-50)*1.7);  
 403   2                      if((control >= 151) && (control <= 250))          //右电机调速0~100个档位 手机端软件进行调节
 404   2                              pwm_right_val = 170-((control-150)*1.7);
 405   2              }
 406   1                      
 407   1      
 408   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1104    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
